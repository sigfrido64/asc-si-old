*** INSTALLAZIONE DEI VARI PACCHETTI DI BASE ***

apt-get install python3 ed ok sulle dipendenze.
apt-get install python3-pip ed ok sulle dipendenze
apt-get ibstall git ed ok sulle dipendenze




*** INSTALLAZIONE DI MONGODB ***

Creo un file in /etc/apt/sources.list.d in modo che inserisca anche il repository di mongodb tra quelli validi.
Il file lo chiamo, per esempio :  mongodb-org-3.2.list

nel file metto : 
deb http://repo.mongodb.org/apt/debian wheezy/mongodb-org/3.2 main

poi devo importare la chiave GPG. Attenzione al :80 dopo l'indirizzo perchè mi serve per garantire che la richiesta venga fatta sulla porta
80 e non su quella standard 11371 che potrebbe essere bloccata dal firewall.
Scrivo quindi :

root@debian #) apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927

A questo punto posso installare mongodb con (occhio che mongodb-org è un metapacchetto che installa tutto)

root@debian #) apt-get install mongodb-org




*** INSTALLAZIONE DI NGINX ***
Installo nginx con apt-get

root@debian #(si)) apt-get install nginx

Poi prendo il file che ho in Documentazione/deploy/nginx e lo metto in /etc/nginx/sites-enabled

A questo punto posso attivare il servizio

root@debian #(si)) service nginx restart




*** INSTALLAZIONE DI SI ***

Creo la cartella /var/www in cui mettere i files di nginx e do permessi di scrittura illimitati a www-data che è l'utente di
default per far girare il web-server.

root@debian #) mkdir /var/www
root@debian #) chmod -R 777 /var/www
root@debian #) chown -R www-data:www-data /var/www


Creo quindi una cartella [si] per metterci dentro i files e tutto il necessario.
Clono il repository nella cartella si, lo faccio prima perchè altrimenti dopo mi dice che la cartella esiste già e non lo fa.

root@debian #) git clone https://github.com/sigfrido64/asc-si.git si


A questo punto installo Virtualenv. Attenzione all'appendice se lavori sotto windows e comunque se sulla macchina
ci sono due versioni di python diverse in funzione.

root@debian #) pip install virtualenv (che userà la versione 3 di python)

creo il virtualenv 

(mkdir non serve se ho clonato il repository da prima)

root@debian #) virtualenv si

lo attivo

root@debian #)  source bin/activate

ed a questo punto posso installare il resto dei requirements

root@debian #)  pip install -r requirements.txt




*** INSTALLAZIONE DI GUNICORN *** (Solo per il deploy in produzione e solo su macchina unix)
Gunicorn lo installo con pip in quanto l'installazione di default di Debian ne usa una versione molto vecchia.
Entro nel virtualenv [attivare ovviamente] e lo installo con pip.

root@debian #(si)) pip install gunicorn

Poi uso il file gunicorn che trovo in Documentazione/deploy/gunicorn per creare il servizio che fa capo a gunicorn
Lo copio in /etc/init.d e dopo posso avviare gunicorn con

root@debian #(si)) service gunicorn start




*** AGGIORNAMENTO E MANUTENZIONE ***


Aggiornamento del repository mediante git

per allineare il mio repository con quello remoto uso : git update remote
per estrarre il remoto e mettere in linea il tutto uso : git merge origin/master

A questo punto la mia copia locale è uguale a quella remota.


Abilitazione del meccanismo di autorizzazione.

Come prima cosa creo l'utente amministratore con :
use admin
db.createUser(
  {
    user: "admin",
    pwd: "123",
    roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
  }
)


Poi creo un utente per il database Asc su cui andrò ad operare con :

use asc
db.createUser(
  {
    user: "ascUser",
    pwd: "123",
    roles: [ { role: "readWrite", db: "asc" } ]
  }
)


APPENDICE Virtualenv su Windows con interpreti diversi
Per creare un virtualenv che faccia riferimento ad un particolare interprete basta usare :

REM Non ricordo da dove arriva !!! c:\>py -3.4 -m c:\Python34 nome_virtulenv

Questa invece va !

C:\>virtualenv -p c:\Python27\python.exe nome_virtualenv
questo userà la versione dell'interprete che ho indicato.


Per installare bene mtools in un virtualenv di PYTHON27 (funziona solo con questo) metti in coda ad activate.bat
Il file activate.bat lo trovi in scripts

set "TCL_LIBRARY=C:\Python27\tcl\tcl8.5"
set "TK_LIBRARY=C:\Python27\tcl\tk8.5"


